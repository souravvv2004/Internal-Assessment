<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap Demo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<body>
    <!-- Enter ID -->
    <div class="input-group input-group-sm mb-3">
        <input type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" id="userID" name="userID" placeholder="Enter Teacher ID or Student ID">
        <div class="input-group-append">
            <button class="btn btn-outline-primary" onclick="debouncedHandleInput()" type="button">Fetch</button>
        </div>
    </div>

   
    <div class="mb-3">
        <label for="roleSelect" class="form-label">Select Role</label>
        <select class="form-select" id="roleSelect" aria-label="Select Role" Name="role">
            <option value="" disabled selected>Select Role</option>
            <option value="Instructor">Instructor</option>
            <option value="Student">Student</option>
        </select>
    </div>

    <!-- Showing Selected Courses -->
    <div>
        <ol class="list-group list-group-numbered" id="selectedCourse"></ol>
    </div>

    <!-- Showing Courses for Selection -->
    <div>
        <div class="input-group mb-3">
            <input type="text" class="form-control" list="courseList" placeholder="Select Course" id="Course">
            <datalist id="courseList">
                <option value="SelectCourse">Select Course</option>
                <% for(let index = 0; index < array.length; index++) { %>
                    <option value="<%=array[index].courseID%>:<%=array[index].courseName%>"><%=array[index].courseID+":"+array[index].courseName%></option>
                <% } %>
            </datalist>
            <button class="btn btn-outline-secondary" type="button" onclick="addCourse()">Add</button>
            <button class="btn btn-outline-secondary" type="button" onclick="removeCourse()">Remove</button>
        </div>
    </div>

    <button onclick="submitDetails()" style="margin-left: 40%; margin-top:20px;" type="submit" class="btn btn-primary">Submit</button>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        let selectedCourseList = []; 
        const selectedCourse = document.getElementById("selectedCourse");
        let debounceTimeout;

        function debouncedHandleInput() {
            clearTimeout(debounceTimeout); 
            debounceTimeout = setTimeout(() => {
                handleInput(); // Call handleInput() after debounce delay
            }, 300); // 300 ms delay after user stops typing
        }

        async function handleInput() {
    const userId = document.getElementById("userID").value;
    if (!userId) return; 

    try {
        const response = await fetch(`/univ/courseAlloted/${userId}`);
        const { courses, role } = await response.json(); 
        console.log(courses);
        if (courses && courses.length > 0) {  
            const courseList = document.getElementById("selectedCourse");
            courseList.innerHTML = ''; 

          
            courses.forEach(course => {
                const option = document.createElement("li");
                option.className = "list-group-item";
                option.textContent = `${course.courseID}:${course.courseName}`;
                courseList.appendChild(option);
                selectedCourseList.push(`${course.courseID}:${course.courseName}`);
            });

            document.getElementById("roleSelect").value = role; 
        } else {
            document.getElementById("selectedCourse").innerHTML="";  
            alert("No courses found for this ID."); 
        }
    } catch (error) {
        console.error("Error fetching courses:", error);  
        alert("Error fetching courses.");
    }
}


        function addCourse() {
            const courseInput = document.getElementById("Course");
            const courseValue = courseInput.value;

            if (courseValue && !selectedCourseList.includes(courseValue)) {
                selectedCourseList.push(courseValue);

                const listItem = document.createElement("li");
                listItem.className = "list-group-item";
                listItem.textContent = courseValue;
                selectedCourse.appendChild(listItem);

                courseInput.value = '';
            } else {
                alert("Kindly select a new course or the course is already added.");
            }
        }

        function removeCourse() {
            const courseInput = document.getElementById("Course");
            const courseValue = courseInput.value;

            if (courseValue && selectedCourseList.includes(courseValue)) {
                selectedCourseList = selectedCourseList.filter(course => course !== courseValue);

                const listItems = selectedCourse.getElementsByTagName("li");
                for (let i = 0; i < listItems.length; i++) {
                    if (listItems[i].textContent === courseValue) {
                        listItems[i].remove();
                        break;
                    }
                }

                courseInput.value = '';
            } else {
                alert("Kindly select a course to remove.");
            }
        }

        function submitDetails(){
            selectedCourseList = selectedCourseList.map(course => course.split(':')[0]);
            const userID = document.getElementById("userID").value;
            const role = document.getElementById("roleSelect").value;

            if (!role) {
                alert("Please select a role (Instructor or Student).");
                return;
            }

            fetch("/univ/courseAllot", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userID, role, courseID: selectedCourseList })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
                alert("Courses submitted successfully!");
            })
            .catch(async (error) => {
                console.error('Error:', error);
                alert("Error submitting courses.");
            });
        }
    </script>
</body>
</html>
